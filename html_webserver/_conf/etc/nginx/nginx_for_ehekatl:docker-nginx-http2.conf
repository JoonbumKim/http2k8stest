worker_processes 2;
pid /run/nginx.pid;

worker_rlimit_nofile 31744;

# worker_shutdown_timeout 10s ;

events {
    multi_accept        on;
    worker_connections  16384;
    use                 epoll;
}


http {

    real_ip_header      X-Forwarded-For;

    real_ip_recursive   on;

    set_real_ip_from    0.0.0.0/0;


        sendfile            on;

    aio                 threads;
    # aio_write           on;

    tcp_nopush          on;
    tcp_nodelay         on;

    log_subrequest      on;

    reset_timedout_connection on;

    keepalive_timeout  75s;
    keepalive_requests 100;

    client_header_buffer_size       2k;
    client_header_timeout           60s;
    large_client_header_buffers     4 8k;
    client_body_buffer_size         8k;
    client_body_timeout             60s;

    http2_max_field_size            4k;
    http2_max_header_size           16k;

    types_hash_max_size             2048;
    server_names_hash_max_size      1024;
    server_names_hash_bucket_size   64;
    map_hash_bucket_size            128;

    proxy_headers_hash_max_size     512;
    proxy_headers_hash_bucket_size  64;

    variables_hash_bucket_size      128;
    variables_hash_max_size         2048;

    underscores_in_headers          off;
    ignore_invalid_headers          on;

    # include /etc/nginx/mime.types;
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type text/html;

    # brotli on;
    # brotli_comp_level 4;
    # brotli_types application/xml+rss application/atom+xml application/javascript application/x-javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;

    gzip on;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types application/atom+xml application/javascript application/x-javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;
    gzip_proxied any;
    gzip_vary on;

    # Custom headers for response

    server_tokens on;

    # disable warnings
    uninitialized_variable_warn off;

    server_name_in_redirect off;
    port_in_redirect        off;

    ssl_protocols TLSv1.2;

    # turn on session caching to drastically improve performance

    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_session_timeout 10m;

    # allow configuring ssl session tickets
    ssl_session_tickets on;

    # slightly reduce the time-to-first-byte
    ssl_buffer_size 8k;

    # allow configuring custom ssl ciphers
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # ssl_ecdh_curve auto;

    proxy_ssl_session_reuse on;


    map $http_x_forwarded_host $best_http_host {
        default          $http_x_forwarded_host;
        ''               $this_host;
    }
    # Obtain best http host
    map $http_host $this_host {
        default          $http_host;
        ''               $host;
    }    
    map $http_x_forwarded_for $the_real_ip {

        default          $remote_addr;

    }

    # Retain the default nginx handling of requests without a "Connection" header
    map $http_upgrade $connection_upgrade {
        default          upgrade;
        ''               close;
    }

    map $http_x_forwarded_port $pass_server_port {
        default           $http_x_forwarded_port;
        ''                $server_port;
    }    
    map $pass_server_port $pass_port {
        443              443;
        default          $pass_server_port;
    }
    map $http_x_forwarded_proto $pass_access_scheme {
        default          $http_x_forwarded_proto;
        ''               $scheme;
    }    
    server {
        listen       80;
        # server_name  localhost;

        location / {
            root    /usr/share/nginx/html;
            index   index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # HTTPS server
    server {
        listen 80 default_server reuseport backlog=511;
        listen [::]:80 default_server reuseport backlog=511;

        listen 443  default_server reuseport backlog=511 ssl http2;
        listen [::]:443  default_server reuseport backlog=511 ssl http2;
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;


        location / {
 
             port_in_redirect off;
 
             client_max_body_size                    "1m";
 
             proxy_set_header Host                   $best_http_host;
 
             # Pass the extracted client certificate to the backend
 
             proxy_set_header ssl-client-cert        "";
             proxy_set_header ssl-client-verify      "";
             proxy_set_header ssl-client-dn          "";
 
             # Allow websocket connections
             proxy_set_header                        Upgrade           $http_upgrade;
             proxy_set_header                        Connection        $connection_upgrade;
 
             proxy_set_header X-Real-IP              $the_real_ip;
 
             proxy_set_header X-Forwarded-For        $the_real_ip;
 
             proxy_set_header X-Forwarded-Host       $best_http_host;
             proxy_set_header X-Forwarded-Port       $pass_port;
             proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
             proxy_set_header X-Original-URI         $request_uri;
             proxy_set_header X-Scheme               $pass_access_scheme;
 
             # Pass the original X-Forwarded-For
             proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
 
             # mitigate HTTPoxy Vulnerability
             # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
             proxy_set_header Proxy                  "";
 
             # Custom headers to proxied server
 
             proxy_connect_timeout                   5s;
             proxy_send_timeout                      60s;
             proxy_read_timeout                      60s;
 
             proxy_redirect                          off;
             proxy_buffering                         off;
             proxy_buffer_size                       "8k";
             proxy_buffers                           8 "8k";
             proxy_request_buffering                 "on";
 
             proxy_http_version                      1.1;
 
             proxy_cookie_domain                     off;
             proxy_cookie_path                       off;
 
             # In case of errors try the next upstream server before returning an error
             proxy_next_upstream                     error timeout invalid_header http_502 http_503 http_504;        
            
            access_by_lua_block { ngx.sleep(0.1) }
             

            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        # location /**/image/**/* {
        #     access_by_lua_block { ngx.sleep(0.01) }
        # }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        # health checks in cloud providers require the use of port 80
        location /healthz {
            access_log off;
            return 200;
        }

        # this is required to avoid error if nginx is being monitored
        # with an external software (like sysdig)
        location /nginx_status {
            allow 127.0.0.1;
            allow ::1;
            deny all;

            access_log off;
            stub_status on;
        }              
    }

}
#